<?php

/*
 * jQuery Mobile Framework : plugin to provide a date and time picker.
 * Copyright (c) JTSage
 * CC 3.0 Attribution.  May be relicensed without permission/notification.
 * https://github.com/jtsage/jquery-mobile-datebox
 */
/* Options Documentation */

//all = ['Date','Cal','Flip','Slide','Time','TimeFlip','Dur'];  (mode list)

$opt = array(
	'common' => array( 'Common Options', array(
		'mode' => array(NULL, 'Mode of operations', 'String', true),
		'lockInput' => array(true, 'Lock the Input Element from manual input', 'Boolean', true),
		'enhanceInput' => array(true, 'Enhance Numeric Inputs on Mobile', 'Boolean', array(1,0,0,0,1,0,0)),
		'defaultValue' => array(false, 'Default value for the date - e.g. [2001,1,1] or 13:42', 'Array/String', true),
		'showInitialValue' => array(false, 'Auto-fill Input field on initialization', 'Boolean', true),
		'startOffsetYears' => array(false, 'Offset the start year by # - pile on to defaultVale', 'Integer', array(1,1,1,1,0,0,0)),
		'startOffsetMonths' => array(false, 'Offset the start month by # - pile on to defaultVale', 'Integer', array(1,1,1,1,0,0,0)),
		'startOffsetDays' => array(false, 'Offset the start day by # - pile on to defaultVale', 'Integer', array(1,1,1,1,0,0,0))
	)),
	'display' => array('Display Options', array(
		'centerHoriz' => array(false, 'Center Horizonitally', 'Boolean', true),
		'centerVert' => array(false, 'Center Verticlly', 'Boolean', true),
		'transition' => array('pop', 'Transition for display', 'String', true),
		'useAnimation' => array(true, 'Use Animations', 'Boolean', true),
		'hideInput' => array(false, 'Hide the Input Element', 'Boolean', true),
		'hideFixedToolbars' => array(false, 'Hide Fixed toolbars on open', 'Boolean', true),
		'zindex' => array(1000, 'Z-Index of controls', 'Integer', true),
		'clickEvent' => array('vclick', 'Listener event for all non-closing buttons in control', 'String', true),
		'clickEventAlt' => array('click', 'Listener event for all closing buttons in control', 'String', true),
		'resizeListener' => array(true, 'Re-Position the control on window resize', 'Boolean', true),
		'dialogEnable' => array(false, 'Enable the jQM Dialog mode', 'Boolean', true),
		'dialogForce' => array(false, 'Force use of the jQM Dialog mode', 'Boolean', true),
		'enablePopup' => array(false, 'Use jQM builtin popups', 'Boolean', true),
		'popupForceX' => array(false, 'Force the X/Y position of the opened control', 'Number', true),
		'popupForceY' => array(false, 'Force the X/Y position of the opened control', 'Number', true),
		'popupPosition' => array(false, 'When set to "window", center control in window', 'String', true),
		'useModal' => array(false, 'Use faded modal background for control', 'Boolean', true),
		'useInline' => array(false, 'Show control inline in the page (always visible)', 'Boolean', true),
		'useInlineBlind' => array(false, 'Show the control inline in the page when clicked (rolldown)', 'Boolean', true),
		'useButton' => array(true, 'Show a button in the Input Element to open the control', 'Boolean', true),
		'useFocus' => array(false, 'Open the control when the Input Element is focused', 'Boolean', true),
		'usePlaceholder' => array(false, 'Attempt to auto fill the placeholder text (or use the supplied custom text)', 'Boolean', true),
		'useNewStyle' => array(false, 'Use the new input display style (cleaner, less inconsistency)', 'Boolean', true),
		'useAltIcon' => array(false, 'When using useNewStyle, use a light icon rather than a dark one', 'Boolean', true),
		'overrideStyleClass' => array(false, 'When using useNewStyle, add a custom icon class', 'String', true)
	)),
	'control' => array('Control Options', array(
		'useHeader' => array(true, 'Use a toolbar header for the control', 'Boolean', true),
		'useImmediate' => array(false, 'Update the Input Element on every control change', 'Boolean', true),
		'useClearButton' => array(false, 'Show a button to clear the Input Element in the control', 'Boolean', true),
		'useSetButton' => array(true, 'Show button to set the date', 'Boolean', array(1,0,1,1,1,1,1)),
		'useTodayButton' => array(false, 'Show button to jump to today', 'Boolean', array(0,1,0,0,0,0,0)),
		'useCollapsedBut' => array(false, 'When 2 buttons would show, collapse them into a single line', 'Boolean', true),
		'rolloverMode' => array("{ 'm': true, 'd': true, 'h': true, 'i': true, 's': true }", 'Allow rollover of each date element', 'Object', array(1,0,1,1,1,1,0)),
		'slen' => array("{'y': 5, 'm':6, 'd':15, 'h':12, 'i':30}", 'Length of sliders (1/2 of slider)', 'Object', array(0,0,0,1,0,0,0)),
		'flen' => array("{'y': 15, 'm':12, 'd':15, 'h':12, 'i':15, 'a':3}", 'Height of rollers (1/2 of roller)', 'Object', array(0,0,1,0,0,1,0)),
		'calShowDays' => array(true, 'Show Day Labels in calendar', 'Boolean', array(0,1,0,0,0,0,0)),
		'calShowWeek' => array(false, 'Show ISO Week number in calendar', 'Boolean', array(0,1,0,0,0,0,0)),
		'calOnlyMonth' => array(false, 'Do not show next/previous months in calendar', 'Boolean', array(0,1,0,0,0,0,0)),
		'calWeekMode' => array(false, 'Select by single week day in calendar', 'Boolean', array(0,1,0,0,0,0,0)),
		'calWeekModeDay' => array(1, 'Weekday to select when in calWeekMode', 'Integer', array(0,1,0,0,0,0,0))
	)),
	'limiting' => array('Data Limiting Options', array(
		'afterToday' => array(false, 'Limit all dates selected to *after* today\'s date', 'Boolean', array(1,1,1,1,0,0,0)),
		'beforeToday' => array(false, 'Limit all dates selected to *before* today\'s date', 'Boolean', array(1,1,1,1,0,0,0)),
		'notToday' => array(false, 'Limit all dates selected to *not* today\'s date', 'Boolean', array(1,1,1,1,0,0,0)),
		'maxDays' => array(false, 'Limit all dates selected to before today + ## days', 'Integer', array(1,1,1,1,0,0,0)),
		'minDays' => array(false, 'Limit all dates selected to after today - ## days', 'Integer', array(1,1,1,1,0,0,0)),
		'maxYear' => array(false, 'Limit all dates selected to before this year', 'Integer', array(1,0,1,1,0,0,0)),
		'minYear' => array(false, 'Limit all dates selected to after this year', 'Integer', array(1,0,1,1,0,0,0)),
		'blackDatesRec' => array(false, 'Do not allow these recurring dates to be selected (array of arrays)', 'Array', array(1,1,1,1,0,0,0)),
		'blackDates' => array(false, 'Do not allow these ISO dates to be selected (array of dates)', 'Array', array(1,1,1,1,0,0,0)),
		'blackDays' => array(false, 'Do not allow these days to be selected (array of day indexes)', 'Array', array(1,1,1,1,0,0,0)),
		'enableDates' => array(false, 'Allow *only* these ISO dates to be sleected (array of dates)', 'Array', array(0,1,0,0,0,0,0)),
		'minHour' => array(false, 'Limit times to hours *after* this hour', 'Integer', array(0,0,0,0,1,1,0)),
		'maxHour' => array(false, 'Limit times to hours *before* this hour', 'Integer', array(0,0,0,0,1,1,0)),
		'validHours' => array(false, 'Limit times to *only* these hours (array of hours)', 'Array', array(0,0,0,0,1,1,0)),
		'minuteStep' => array(1, 'Stepper for minutes', 'Integer', array(0,0,0,1,1,1,0)),
		'minuteStepRound' => array(0, 'Direction to round :: -1 = Down, 1 = Up, 0 = "Standard Rounding"', 'Integer', array(0,0,0,1,1,1,0)),
		'highDays' => array(false, 'Highlight these days (array of day indexes)', 'Array', array(0,1,0,0,0,0,0)),
		'highDates' => array(false, 'Highlight these ISO dates (array of dates)', 'Array', array(0,1,0,0,0,0,0)),
		'highDatesRec' => array(false, 'Highlight these recurring dates (array of arrays)', 'Array', array(0,1,0,0,0,0,0)),
		'highDatesAlt' => array(false, 'Highlight these ISO dates (array of dates) (alternate)', 'Array', array(0,1,0,0,0,0,0)),
		'calShowDateList' => array(false, 'Show Special Date List Picker', 'Boolean', array(0,1,0,0,0,0,0)),
		'calDateList' => array(false, 'Array of 2 Element Arrays (each w/ an ISO date and a desc)', 'Array', array(0,1,0,0,0,0,0)),
		'durationSteppers' => array("{'d': 1, 'h': 1, 'i': 1, 's': 1}", 'Steppers for the duration elements', 'Object', array(0,0,0,0,0,0,1))
	)),
	'themes' => array('Theme Options', array(
		'theme' => array(false, 'Base theme for control', 'Boolean', true),
		'themeHeader' => array('a', 'Theme for header', 'String', true),
		'themeButton' => array('a', 'Theme swatch for +/- Buttons', 'String', array(1,0,0,0,1,0,1)),
		'themeInput' => array('a', 'Theme swatch for input elements', 'String', array(1,0,0,0,1,0,1)),
		'themeDateHigh' => array('b', 'Theme swatch for today\'s date', 'String', array(0,1,1,1,0,1,0)),
		'themeDatePick' => array('b', 'Theme swatch for choosen (centered) date', 'String', array(0,1,1,1,0,1,0)),
		'themeDate' => array('a', 'Theme swatch for other dates', 'String', array(0,1,1,1,0,1,0)),
		'themeDateToday' => array('b', 'Theme swatch for today\'s date', 'String', array(0,1,0,0,0,0,0)),
		'themeDayHigh' => array('b', 'Theme swatch for highDays', 'String', array(0,1,0,0,0,0,0)),
		'themeDateHighAlt' => array('b', 'Theme swatch for highDatesAlt', 'String', array(0,1,0,0,0,0,0)),
		'themeDateHighRec' => array('b', 'Theme swatch for highDatesRec', 'String', array(0,1,0,0,0,0,0)),
		'calUsePickers' => array(false, 'Use Month/Year Pickers', 'Boolean', array(0,1,0,0,0,0,0)),
		'calYearPickMin' => array(-6, 'Limit for Year Picker (Int < 1800, Year, "NOW")', 'Mixed', array(0,1,0,0,0,0,0)),
		'calYearPickMax' => array(6, 'Limit for Year Picker (Int < 1800, Year, "NOW")', 'Mixed', array(0,1,0,0,0,0,0)),
		'calNoHeader' => array(false, 'Suppress Standard Header', 'Boolean', array(0,1,0,0,0,0,0)),
		'calHighToday' => array(true, 'Highlight today\'s date', 'Boolean', array(0,1,0,0,0,0,0)),
		'calHighPick' => array(true, 'Highlight choosen date', 'Boolean', array(0,1,0,0,0,0,0)),
		'calWeekHigh' => array(false, 'Highlight full week on mouseover', 'Boolean', array(0,1,0,0,0,0,0)),
		'calControlGroup' => array(false, 'Use control group buttons in calendar', 'Boolean', array(0,1,0,0,0,0,0))
	)),
	'i18n' => array('Internationalization Options (overrideOptionName)', array(
		'setDateButtonLabel' => array('Set Date', 'Set Date Button Label', 'String', array(1,1,1,1,0,0,0)),
		'setTimeButtonLabel' => array('Set Time', 'Set Time Button Label', 'String', array(0,0,0,0,1,1,0)),
		'setDurationButtonLabel' => array('Set Duration', 'Set Duration Button Label', 'String', array(0,0,0,0,0,0,1)),
		'calTodayButtonLabel' => array('Jump to Today', 'Jump to today button Label', 'String', array(0,1,0,0,0,0,0)),
		'titleDateDialogLabel' => array('Set Date', 'Date modes fallback header label', 'String', array(1,1,1,1,0,0,0)),
		'titleTimeDialogLabel' => array('Set Time', 'Time modes fallback header label', 'String', array(0,0,0,0,1,1,1)),
		'daysOfWeek' => array("array('Sunday' ... 'Saturday']", 'Days of the week', 'Array', true),
		'daysOfWeekShort' => array("array('Su' ... 'Sa']", 'Abbreviated days of the week', 'Array', true),
		'monthsOfYear' => array("array('January' ... 'December']", 'Months of the year', 'Array', true),
		'monthsOfYearShort' => array("array('Jan' ... 'Dec']", 'Abbreviated months of the year', 'Array', true),
		'durationLabel' => array("array('Days', 'Hours', 'Minutes', 'Seconds']", 'Labels for duration elements', 'Array', array(0,0,0,0,0,0,1)),
		'durationDays' => array("array('Day', 'Days']", 'Name of day/days for duration', 'Array', array(0,0,0,0,0,0,1)),
		'timeFormat' => array(24, 'Format for clock', 'Integer', array(0,0,0,0,1,1,0)),
		'headerFormat' => array('%A, %B %-d, %Y', 'Format for header if used', 'String', true),
		'tooltip' => array('Open Date Picker', 'Mouseover tooltip for open button', 'String', true),
		'nextMonth' => array('Next Month', 'Mouseover tooltip for next month button', 'String', array(0,1,0,0,0,0,0)),
		'prevMonth' => array('Previous Month', 'Mouseover tooltip for prev month button', 'String', array(0,1,0,0,0,0,0)),
		'dateFieldOrder' => array("array('m', 'd', 'y']", 'Field order for date entry', 'Array', array(1,0,1,0,0,0,0)),
		'timeFieldOrder' => array("array('h', 'i', 'a']", 'Field order for time entry', 'Array', array(0,0,0,0,1,1,0)),
		'slideFieldOrder' => array("array('y', 'm', 'd']", 'Field order for slide mode', 'Array', array(0,0,0,1,0,0,0)),
		'dateFormat' => array('%Y-%m-%d', 'Format for returned date', 'Array', array(1,1,1,1,0,0,0)),
		'useArabicIndic' => array(false, 'Use Arabic/Indic numerals', 'Boolean', true),
		'isRTL' => array(false, 'Language runs Right-to-Left', 'Boolean', true),
		'calStartDay' => array(0, 'Day of week to start calendar on', 'Integer', array(0,1,0,0,0,0,0)),
		'clearButton' => array('Clear', 'Clear Input Element button label', 'String', true),
		'durationOrder' => array("array('d', 'h', 'i', 's']", 'Field order for duration entry', 'Array', array(0,0,0,0,0,0,1)),
		'meridiem' => array("array('AM', 'PM']", 'Name of meridiems, if used', 'Array', true),
		'timeOutput' => array('%k:%M', 'Format for returned time', 'String', array(0,0,0,0,1,1,0)),
		'durationFormat' => array('%Dd %DA, %Dl:%DM:%DS', 'Format for returned duration', 'String', array(0,0,0,0,0,0,1)),
		'calDateListLabel' => array('Other Dates', 'Text for other dates dropdown', 'String', array(0,1,0,0,0,0,0)),
		'calHeaderFormat' => array('%B %Y', 'Header format for calendar mode', 'String', array(0,1,0,0,0,0,0)),
		'calTomorrowButtonLabel' => array('Jump to Tommorrow', 'Text for "tommorrow" button', 'String', array(0,1,0,0,0,0,0))
	)),
	'custom' => array('CustomBox/CustomFlip Options', array(
		'customData' => array('N/A', 'Data structure for custom modes', 'Array', false),
		'themeOptPick' => array('a', 'Theme for highlighted option (customflip)', 'String', false),
		'themeOpt' => array('d', 'Theme for other options (customflip)', 'String', false),
		'overrideCustomSet' => array('Looks Good', 'Set button for custom modes (i18n aware)', 'String', false),
		'customDefault' => array('[0,0,0]', 'Array of default indexs for custom modes', 'Array', false)
	)),
	'callback' => array('Callback Options', array(
		'openCallback' => array(false, 'Callback function to run on control open', 'Function', true),
		'openCallbackArgs' => array("[]", 'Extra arguments to pass to open callback.', 'Array', true),
		'closeCallback' => array(false, 'Callback function to run on control close', 'Function', true),
		'closeCallbackArgs' => array("[]", 'Extra arguments to pass to close callback.', 'Array', true)
	)),
	'public' => array('Public Functions', array(
		'open' => array('', 'Open the datebox control', ''),
		'close' => array('', 'Close the datebox control', ''),
		'disable' => array('', 'Disable the datebox control', ''),
		'enable' => array('', 'Enable the datebox control', ''),
		'refresh' => array('', 'Refresh the datebox control', ''),
		'getTheDate' => array('', 'Return the current date object', 'Object'),
		'setTheDate' => array('', 'Set the date (date object)', ''),
		'getLastDur' => array('', 'Get the last set duration', 'Integer'),
		'{}' => array('', 'Set an option', ''),
		'getOption' => array('', "Retrieve an option's value", 'Mixed'),
		'callFormat' => array('', 'Return a formatted date', 'String'),
		'applyMinMax' => array('', 'Apply new min/max attributes', '')
	)),
	'event' => array("'datebox' Listener Events (method)", array(
		'open' => array('','Send: Open Datebox','-'),
		'close' => array('', 'Send: Close Datebox', '-'),
		'set' => array('', 'Send: Set the date', '2 args'),
		'doset' => array('', 'Send: Refresh input element', '-'),
		'doclear' => array('', 'Send: Clear input element', '-'),
		'dorefresh' => array('', 'Send: Refresh control', '-'),
		'dooffset' => array('', 'Send: Change the date', '2 args'),
		'enable' => array('', 'Recieve: Datebox has been enabled', '-'),
		'disable' => array('', 'Recieve: Datebox has been disabled', '-'),
		'refresh' => array('', 'Recieve: Datebox has been refreshed', '-'),
		'clear' => array('', 'Recieve: Datebox input has been cleared', '-'),
		'offset' => array('', 'Recieve: Date has been changed', '2 args'),
	))
);
?>
